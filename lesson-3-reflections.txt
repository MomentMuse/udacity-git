// When would you want to use a remote repository rather than keeping all your work
local?

Remote repositories would be helpful if you were working on a collaborative project, open-ssource project, or a project that you wanted to easily share with other developers for feedback, etc. Hosting your repository on Git would allow multiple people to push their commits to the same project, facilitating collaboration regardless of physical distance.

// Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

If you were working on a collaborative project, having Git automatically pull new changes to your local repository could create merge conflicts and introduce bugs or incompatible code. Being able to manually pull branches from the remote repository and deliberately integrate updates with local files is much safer and offers more control.

// Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

A fork is a a public copy of someone else's repository on GitHub that gives you ownership and the ability to edit and tinker with it as you please. You can edit the project and build on it as your own file, and push changes to your forked copy of the repo online. Fork would be ideal if you wanted to create a different version of the project for public display.
A clone is a local copy of a repository that contains its history and branches. Cloning someone's repository would be useful if you wanted to understand the development of a project, or tinker with it for personal use with no intention of retooling and uploading it on your own account (although this is possible for a cloned repository, forking would be more suitable.)
A branch is another path of development of a project, whether it be experimental or include some other feature. It would be useful to create new branches of a project if multiple collaborators are working on it at once. This would avoid conflicts, and the branches would later be able to merged into the master branch once changes were finalized

// What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

// How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

// When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
